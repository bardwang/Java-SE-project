/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.DrugAdminRole;

import Business.Drug.Drug;
import Business.Drug.DrugCatalog;
import Business.Drug.DrugInventory;
import Business.Drug.DrugReceived;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bardw_000
 */
public class ManageDrugInventoryJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private DrugCatalog drugCatalog;
    private DrugInventory drugInventory;
    private final int threshold = 5;
    
    /**
     * Creates new form ManageDrugInventoryJPanel
     */
    public ManageDrugInventoryJPanel(JPanel upc, DrugCatalog drugCatalog, DrugInventory drugInventory) {
        initComponents();
        
        this.userProcessContainer = upc;
        this.drugCatalog = drugCatalog;
        this.drugInventory = drugInventory;
        
        populateDrugCatalogTable();
        populateDrugInventoryTable();
        
        // to initial the warning text area
        setAreaText();
    }
    
    public void setAreaText(){
        warnTextArea.setEditable(false);
        warnTextArea.setText("");
        String warntext = "";
        
        for(Drug d: drugCatalog.getDrugList()){
            int quantity = 0;
            for(DrugReceived dr: drugInventory.getReceviedDrugList()){
                if(d.getName().equals(dr.getDrug().getName())){
                    quantity = quantity + dr.getQuantity();
                }
            }
            if(quantity  == 0){
            warntext = warntext + d.getName() + "(" + d.getPharma() + ") is not in store!\nThe threshold is " + threshold + ".\n";
            }else if(quantity < threshold){
            warntext = warntext + d.getName() + "(" + d.getPharma() + ") is in short supply!\nThe threshold is " + threshold + ".\n";    
            }     
        }
        warnTextArea.setText(warntext);
    }
    
    public void populateDrugCatalogTable(){
        DefaultTableModel dtm = (DefaultTableModel)drugCatalogTable.getModel();
        int rowCount = drugCatalogTable.getRowCount();
        for(int i = rowCount - 1; i >= 0; i--){
            dtm.removeRow(i);
        }
        
        for(Drug drug: this.drugCatalog.getDrugList()){
            Object row[] = new Object[3];
            row[0] = drug;
            row[1] = drug.getPharma();
            row[2] = drug.getPrice() + "$";
            // to check if the vitalSign is normal
            dtm.addRow(row);
        }   
    }
     
     public void populateDrugInventoryTable(){
        DefaultTableModel dtm = (DefaultTableModel)drugInventoryTable.getModel();
        int rowCount = drugInventoryTable.getRowCount();
        for(int i = rowCount - 1; i >= 0; i--){
            dtm.removeRow(i);
        }
        
        for(DrugReceived drug: this.drugInventory.getReceviedDrugList()){
            Object row[] = new Object[4];
            row[0] = drug;
            row[1] = drug.getDrug().getName();        
            row[2] = drug.getExpirationDate();
            row[3] = drug.getQuantity();
            // to check if the vitalSign is normal
            dtm.addRow(row);
        }   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        drugCatalogTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        viewDetailBtn = new javax.swing.JButton();
        addToInventoryBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        drugInventoryTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        warnTextArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        removecBtn = new javax.swing.JButton();
        removeiBtn = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Manage Drug Inventory");

        drugCatalogTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug Name", "Pharma", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(drugCatalogTable);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Drug Catalog");

        viewDetailBtn.setText("View Detail");
        viewDetailBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailBtnActionPerformed(evt);
            }
        });

        addToInventoryBtn.setText("Add to Inventory");
        addToInventoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToInventoryBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Drug Inventory");

        drugInventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial Number", "Drug Name", "Expiration Date", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(drugInventoryTable);

        warnTextArea.setEditable(false);
        warnTextArea.setColumns(20);
        warnTextArea.setRows(5);
        jScrollPane3.setViewportView(warnTextArea);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Inventory Report");

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        removecBtn.setText("remove");
        removecBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removecBtnActionPerformed(evt);
            }
        });

        removeiBtn.setText("remove");
        removeiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeiBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(226, 226, 226)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(viewDetailBtn)
                                        .addGap(18, 18, 18)
                                        .addComponent(addToInventoryBtn)
                                        .addGap(18, 18, 18)
                                        .addComponent(removecBtn))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(removeiBtn)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(jLabel4)))))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(viewDetailBtn)
                            .addComponent(addToInventoryBtn)
                            .addComponent(removecBtn))
                        .addGap(32, 32, 32)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(removeiBtn))
                .addContainerGap(89, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewDetailBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailBtnActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = drugCatalogTable.getSelectedRow();
        if(selectedRow >= 0){
            Drug drug = (Drug)drugCatalogTable.getValueAt(selectedRow, 0);
   
            ViewDrugJPanel panel = new ViewDrugJPanel(userProcessContainer, drug);
            userProcessContainer.add("ViewDrugJPanel", panel);
            CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
            cardLayout.next(userProcessContainer);
             
        }else{
            JOptionPane.showMessageDialog(null, "Please select a row from the table first.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_viewDetailBtnActionPerformed

    private void addToInventoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToInventoryBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = drugCatalogTable.getSelectedRow();
        if(selectedRow >= 0){
            Drug drug = (Drug)drugCatalogTable.getValueAt(selectedRow, 0);
   
            CreateDrugInventoryJPanel panel = new CreateDrugInventoryJPanel(userProcessContainer, drug, drugInventory);
            userProcessContainer.add("CreateDrugInventoryJPanel", panel);
            CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
            cardLayout.next(userProcessContainer);
             
        }else{
            JOptionPane.showMessageDialog(null, "Please select a row from the table first.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_addToInventoryBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void removecBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removecBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = drugCatalogTable.getSelectedRow();
        if(selectedRow >= 0){
            int dialogButton = JOptionPane.YES_NO_CANCEL_OPTION;          
            int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to remove this drug?", "Warning", dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                Drug drug = (Drug)drugCatalogTable.getValueAt(selectedRow, 0);
                this.drugCatalog.getDrugList().remove(drug);            
                this.populateDrugCatalogTable();
            }
        }else{
            JOptionPane.showMessageDialog(null, "Please select a row from the table first.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_removecBtnActionPerformed

    private void removeiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeiBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = drugInventoryTable.getSelectedRow();
        if(selectedRow >= 0){
            int dialogButton = JOptionPane.YES_NO_CANCEL_OPTION;          
            int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to remove this received drug?", "Warning", dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                DrugReceived drugreceived = (DrugReceived)drugInventoryTable.getValueAt(selectedRow, 0);
                this.drugInventory.getReceviedDrugList().remove(drugreceived);
                this.populateDrugInventoryTable();
            }
        }else{
            JOptionPane.showMessageDialog(null, "Please select a row from the table first.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_removeiBtnActionPerformed
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToInventoryBtn;
    private javax.swing.JTable drugCatalogTable;
    private javax.swing.JTable drugInventoryTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton removecBtn;
    private javax.swing.JButton removeiBtn;
    private javax.swing.JButton viewDetailBtn;
    private javax.swing.JTextArea warnTextArea;
    // End of variables declaration//GEN-END:variables
}
