/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.AdministrativeRole;

import Business.EcoSystem;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bardw_000
 */
public class UserAccountListJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private EcoSystem system;
    private Organization organization;
    private String role;

    /**
     * Creates new form UserAccountListJPanel
     */
    public UserAccountListJPanel(JPanel upc, EcoSystem system, Organization organization, String role) {
        initComponents();
        this.userProcessContainer = upc;
        this.system = system;
        this.organization = organization;
        this.role = role;
        
        populateTable();
        buttonvisiable();
    }
    
    private void buttonvisiable(){
        if(role.equals("Patient") || role.equals("Doctor")){
            this.addBtn.setVisible(false);
        }else{
            this.addBtn.setVisible(true);
        }
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) JTable.getModel();
        
        model.setRowCount(0);
        
        if(this.organization == null){
        for (UserAccount useraccount : system.getUserAccountDirectory().getUserAccountList()){
            Object[] row = new Object[3];
            row[0] = useraccount;
            row[1] = useraccount.getUsername();
            row[2] = useraccount.getRole();
            model.addRow(row);
            }
        this.organizationTxt.setText("Patient Group");
        }else{
        for (UserAccount useraccount : this.organization.getUserAccountDirectory().getUserAccountList()){
            Object[] row = new Object[3];
            row[0] = useraccount;
            row[1] = useraccount.getUsername();
            row[2] = useraccount.getRole();
            model.addRow(row);
            }
        this.organizationTxt.setText(this.organization.getName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTable = new javax.swing.JTable();
        organizationTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        changeBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        removeBtn = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("UserAccount List");

        JTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "UserName", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(JTable);

        organizationTxt.setEditable(false);

        jLabel2.setText("Organization Name:");

        changeBtn.setText("Change UserAccount");
        changeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeBtnActionPerformed(evt);
            }
        });

        addBtn.setText("Add New UserAccount");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        removeBtn.setText("Remove");
        removeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(changeBtn)
                                .addGap(18, 18, 18)
                                .addComponent(addBtn)
                                .addGap(18, 18, 18)
                                .addComponent(removeBtn))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(organizationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jButton4)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(271, 271, 271)
                        .addComponent(jLabel1)))
                .addContainerGap(160, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(organizationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(changeBtn)
                    .addComponent(addBtn)
                    .addComponent(removeBtn))
                .addGap(41, 41, 41)
                .addComponent(jButton4)
                .addContainerGap(198, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void changeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeBtnActionPerformed
        // TODO add your handling code here:
        int selectRow = this.JTable.getSelectedRow();
        if(selectRow >= 0){
        UserAccount useraccount = (UserAccount)JTable.getValueAt(selectRow, 0);
        ChangePasswordJPanel changePasswordJPanel = new ChangePasswordJPanel(userProcessContainer, system, useraccount);      
        userProcessContainer.add("ChangePasswordJPanel", changePasswordJPanel);      
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer);
        }else{
            JOptionPane.showMessageDialog(null, "Please select a row from the table first.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_changeBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        AddNewUserAccountJPanel addNewUserAccountJPanel = new AddNewUserAccountJPanel(userProcessContainer, system, this.organization, role);      
        userProcessContainer.add("AddNewUserAccountJPanel", addNewUserAccountJPanel);      
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer);
    }//GEN-LAST:event_addBtnActionPerformed

    private void removeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = this.JTable.getSelectedRow();
        if(selectedRow >= 0){
            int dialogButton = JOptionPane.YES_NO_CANCEL_OPTION;          
            int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to remove this useraccount?", "Warning", dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                UserAccount useraccount = (UserAccount)JTable.getValueAt(selectedRow, 0);
                if(role.equals("Patient")){
                    this.system.getUserAccountDirectory().getUserAccountList().remove(useraccount);
                }else{
                    this.organization.getUserAccountDirectory().getUserAccountList().remove(useraccount);
                }
                this.populateTable();
            }
        }else{
            JOptionPane.showMessageDialog(null, "Please select a row from the table first.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_removeBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTable;
    private javax.swing.JButton addBtn;
    private javax.swing.JButton changeBtn;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField organizationTxt;
    private javax.swing.JButton removeBtn;
    // End of variables declaration//GEN-END:variables
}
